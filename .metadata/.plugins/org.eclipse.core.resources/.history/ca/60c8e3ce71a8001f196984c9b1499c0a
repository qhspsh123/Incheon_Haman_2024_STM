/*
 * lcd1602.c
 *
 *  Created on: Nov 21, 2024
 *      Author: user
 *      Function  :  1602 LCD device control
 */
#include "main.h"
//extern I2C_HandleTypeDef *hi2c; // = extern I2C_HandleTypeDef hi2c1; but pointer is better
#define I2C_ADDR 0x4E	// 0x27 << 1
I2C_HandleTypeDef *hi2c = NULL;

int i2c_init(I2C_HandleTypeDef *p)
{
    hi2c = p;
}

int i2c_scan ()
{
  if(hi2c == NULL) return;
  for (int addr = 0; addr < 128; addr++)
    {
      if (HAL_I2C_IsDeviceReady (hi2c, addr, 1, 10) == HAL_OK)
	{
	  printf("  %02x", addr);
	}
      else
	{
	  printf("  .  ");
	}
      if((addr % 16) == 0) printf("\r\n");
    }

}

void lcd_command(char cmd)		// cmd_bit : abcd_efgh
{
  char n1, n2, n3, n4, dd[4];
  n1 = cmd & 0xf0;			// n1 = abcd 0000  upper nibble
  n2 = (cmd & 0x0f) << 4;		// n2 = efgh 0000  lower nibble to upper  == cmd <<4;
  n3 = (1<<3) | (1<<2) | 0 | 0 ;	//RW | EN_1 | NC | RS >> 0x0C
  n4 = (1<<3) |    0   | 0 | 0 ;	//RW | EN_0 | NC | RS >> 0x08

  dd[0] = n1 | n3;
  dd[1] = n1 | n4;
  dd[2] = n2 | n3;
  dd[3] = n2 | n4;
  HAL_I2C_Master_Transmit(hi2c, I2C_ADDR, dd, 4, 10);
  //HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
}
void lcd_data(char ch)		//RW is always 1
{
  char n1, n2, n3, n4, dd[4];
    n1 = ch & 0xf0;			// n1 = abcd 0000  upper nibble
    n2 = (ch & 0x0f) << 4;		// n2 = efgh 0000  lower nibble to upper  == cmd <<4;
    n3 = (1<<3) | (1<<2) | 0 | (1<<0) ;	//RW | EN_1 | NC | RS >> 0x0D
    n4 = (1<<3) |    0   | 0 | (1<<0) ;	//RW | EN_0 | NC | RS >> 0x09

    dd[0] = n1 | n3;
    dd[1] = n1 | n4;
    dd[2] = n2 | n3;
    dd[3] = n2 | n4;
    HAL_I2C_Master_Transmit(hi2c, I2C_ADDR, dd, 4, 10);
    //HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)

}
void lcd_init()
{
    lcd_command(0x01);	//screen clear
    lcd_command(0x02);	//cursor home
    lcd_command(0x06);
    lcd_command(0x0f);
}

